package com.date.DesignPattern.结构型.代理模式.cglib代理;



import org.springframework.cglib.proxy.Enhancer;
import org.springframework.cglib.proxy.MethodInterceptor;
import org.springframework.cglib.proxy.MethodProxy;

import java.lang.reflect.Method;

public class CglibProxy implements MethodInterceptor {

    // ????????????
    private Object target;

    // 1?? ?????????????????????????
    public CglibProxy(Object target) {
        this.target = target;
    }

    // 2?? ????????????????
    public Object createProxy() {
        // ??????????? API??
        Enhancer enhancer = new Enhancer();
        // ??????????????????????????
        enhancer.setSuperclass(target.getClass());
        // ??????????
        enhancer.setCallback(this);
        // ?????????
        return enhancer.create();
    }

    @Override
    // 3?? ??д?????????????????????????з???
    public Object intercept(Object proxy, Method method, Object[] args,
                            MethodProxy methodProxy) throws Throwable {
        System.out.println("????????" + method.getName() + "??????????....");
        return methodProxy.invokeSuper(proxy, args);// ??????????????????
        // return method.invoke(target, args);
    }


}
